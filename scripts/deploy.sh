#!/bin/bash

# –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ VPS
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ø–ª–æ–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
fi

# –ü–∞—Ä—Å–∏–Ω–≥ SSH —Å—Ç—Ä–æ–∫–∏ –∏–∑ .env
# –§–æ—Ä–º–∞—Ç: user@host/password&port
if [ -z "$SSH" ]; then
    echo -e "${RED}‚ùå SSH –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env${NC}"
    exit 1
fi

# –ò–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ SSH —Å—Ç—Ä–æ–∫–∏
SSH_USER=$(echo $SSH | cut -d'@' -f1)
SSH_REST=$(echo $SSH | cut -d'@' -f2)
SSH_HOST=$(echo $SSH_REST | cut -d'/' -f1)
SSH_PASS_PORT=$(echo $SSH_REST | cut -d'/' -f2)
SSH_PASS=$(echo $SSH_PASS_PORT | cut -d'&' -f1)
SSH_PORT=$(echo $SSH_PASS_PORT | cut -d'&' -f2)

echo -e "${BLUE}üöÄ Sambo Academy - Deploy Script${NC}"
echo "===================================="
echo ""
echo -e "${YELLOW}–°–µ—Ä–≤–µ—Ä:${NC} $SSH_USER@$SSH_HOST:$SSH_PORT"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è sshpass
if ! command -v sshpass &> /dev/null; then
    echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sshpass...${NC}"
    sudo apt-get install -y sshpass
fi

# –°–æ–∑–¥–∞—Ç—å –∞–ª–∏–∞—Å SSH –∫–æ–º–∞–Ω–¥—ã —Å –ø–∞—Ä–æ–ª–µ–º
SSH_CMD="sshpass -p '$SSH_PASS' ssh -p $SSH_PORT -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST"
SCP_CMD="sshpass -p '$SSH_PASS' scp -P $SSH_PORT -o StrictHostKeyChecking=no"

# –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo -e "${YELLOW}üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPS...${NC}"
if eval "$SSH_CMD 'echo Connected successfully'"; then
    echo -e "${GREEN}‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPS!${NC}"
    exit 1
fi

echo ""
echo -e "${YELLOW}üìã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
echo "1) –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (–ø–µ—Ä–≤—ã–π —Ä–∞–∑)"
echo "2) –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥"
echo "3) –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ + –ë–î"
echo "4) –¢–æ–ª—å–∫–æ –ë–î"
echo "5) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
echo ""
read -p "–í–∞—à –≤—ã–±–æ—Ä (1-5): " choice

case $choice in
    1)
        echo -e "${GREEN}üöÄ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π...${NC}"
        
        # 1. –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î –ª–æ–∫–∞–ª—å–Ω–æ
        echo -e "${YELLOW}üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ë–î...${NC}"
        bash scripts/backup_db.sh
        
        # 2. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å .env.production
        if [ ! -f .env.production ]; then
            echo -e "${RED}‚ùå –§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
            echo "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.production –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–æ–ª–∏"
            exit 1
        fi
        
        echo -e "${YELLOW}‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ .env.production${NC}"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N) " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
        
        # 3. –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ VPS
        echo -e "${YELLOW}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ VPS...${NC}"
        eval "$SSH_CMD 'mkdir -p ~/sambo_academy'"
        
        # 4. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        echo -e "${YELLOW}üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
        eval "$SSH_CMD 'cd ~ && rm -rf sambo_academy_temp && git clone https://github.com/eightspb/sambo_academy.git sambo_academy_temp && rm -rf sambo_academy/.git && cp -r sambo_academy_temp/* sambo_academy/ && rm -rf sambo_academy_temp'"
        
        # 5. –ó–∞–≥—Ä—É–∑–∏—Ç—å .env.production
        echo -e "${YELLOW}‚öôÔ∏è  –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
        eval "$SCP_CMD .env.production $SSH_USER@$SSH_HOST:~/sambo_academy/.env"
        
        # 6. –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–º–ø –ë–î
        echo -e "${YELLOW}üíæ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–º–ø–∞ –ë–î...${NC}"
        LATEST_BACKUP=$(ls -t backups/*.sql | head -1)
        eval "$SCP_CMD $LATEST_BACKUP $SSH_USER@$SSH_HOST:~/sambo_academy/backup.sql"
        
        # 7. –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker Compose
        echo -e "${YELLOW}üê≥ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml up -d --build'"
        
        # 8. –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ –ë–î –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
        echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ë–î...${NC}"
        sleep 10
        
        # 9. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î
        echo -e "${YELLOW}üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î...${NC}"
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml exec -T db psql -U sambo_user sambo_academy < backup.sql'"
        
        echo -e "${GREEN}‚úÖ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!${NC}"
        ;;
        
    2)
        echo -e "${GREEN}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞...${NC}"
        
        eval "$SSH_CMD 'cd ~/sambo_academy && git pull origin main'"
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml up -d --build app'"
        
        echo -e "${GREEN}‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω!${NC}"
        ;;
        
    3)
        echo -e "${GREEN}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ + –ë–î...${NC}"
        
        # –ë—ç–∫–∞–ø –ë–î
        bash scripts/backup_db.sh
        LATEST_BACKUP=$(ls -t backups/*.sql | head -1)
        
        # –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥
        eval "$SSH_CMD 'cd ~/sambo_academy && git pull origin main'"
        
        # –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π –¥–∞–º–ø
        eval "$SCP_CMD $LATEST_BACKUP $SSH_USER@$SSH_HOST:~/sambo_academy/backup.sql"
        
        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml stop app'"
        
        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml exec -T db psql -U sambo_user sambo_academy < backup.sql'"
        
        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml up -d --build app'"
        
        echo -e "${GREEN}‚úÖ –ö–æ–¥ –∏ –ë–î –æ–±–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
        ;;
        
    4)
        echo -e "${GREEN}üíæ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î...${NC}"
        
        bash scripts/backup_db.sh
        LATEST_BACKUP=$(ls -t backups/*.sql | head -1)
        
        eval "$SCP_CMD $LATEST_BACKUP $SSH_USER@$SSH_HOST:~/sambo_academy/backup.sql"
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml exec -T db psql -U sambo_user sambo_academy < backup.sql'"
        
        echo -e "${GREEN}‚úÖ –ë–î –æ–±–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
        ;;
        
    5)
        echo -e "${GREEN}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
        
        eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml restart app'"
        
        echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ!${NC}"
        ;;
        
    *)
        echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
        exit 1
        ;;
esac

echo ""
echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
eval "$SSH_CMD 'cd ~/sambo_academy && docker compose -f docker-compose.production.yml ps'"

echo ""
echo -e "${GREEN}‚ú® –ì–æ—Ç–æ–≤–æ!${NC}"
echo -e "${YELLOW}–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:${NC} http://$SSH_HOST"
